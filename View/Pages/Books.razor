@page "/"
@using Domain.Repositories
@using Domain.Repositories.Interfaces
@using Model.Entities
@inject IBookRepository _bookRepository

<div class="container">
    <h1 class="display-3">Books</h1>
    @if (@BookList is not null)
    {
        <table class="table">
            <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Title</th>
                <th scope="col">Author</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var book in BookList)
            {
                <tr>
                    <th scope="row">@book.Id</th>
                    <td><a href="bookdata/@book.Id">@book.Title</a></td>
                    <td>
                        @if (book.BookAuthorList.Count != 0)
                        {
                            @book.BookAuthorList[0].Author.ToString()
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <span>Loading ...</span>
    }
</div>
@code {
    public List<Book> BookList { get; set; }

    protected override async Task OnParametersSetAsync() {
        BookList = await _bookRepository.ReadGraphAsync();
    }
}